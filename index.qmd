---
title: "Russian elections from abroad"
navbar: false
execute:
  echo: false 
  warning: false
subtitle: "How russians vote abroad for Russian president \"elections\""
author: "Ilya Tishchenko"
fig-responsive: false
format:
  html:
    page-layout: full 
---

In 2024 the results of elections of Russian president was reported as high as 87%[^1] . That is inside Russia where freedom of speech is limited. Abroad the result is 72%. Why so?

[^1]: Official results of Russian president elections 2024

```{=html}
<iframe title="Russian elections, demographics of voters" aria-label="Stacked Bars" id="datawrapper-chart-HaX58" src="https://datawrapper.dwcdn.net/HaX58/7/" scrolling="no" frameborder="0" style="width: 0; min-width: 100% !important; border: none;" height="379" data-external="1"></iframe><script type="text/javascript">!function(){"use strict";window.addEventListener("message",(function(a){if(void 0!==a.data["datawrapper-height"]){var e=document.querySelectorAll("iframe");for(var t in a.data["datawrapper-height"])for(var r=0;r<e.length;r++)if(e[r].contentWindow===a.source){var i=a.data["datawrapper-height"][t]+"px";e[r].style.height=i}}}))}();
</script>
```
```{r}
library(tidyverse)
library(plotly)
library(cowplot)
library(ggstar)
library(DT)
library('ggrepel')
library(modelsummary)
options(scipen = 999)
RU04_24 <- read.csv("Data/RU04_24_Russia.csv")

# official results PU, ME, Referendum
pu <- tibble(year=c(2004,2008,2012,2018,2020, 2024),
             rat=c(71.3,70.28,63.6,76.7,78.45, 87),
             en_country = rep("Официальный результат
выборов в РФ",6)) %>%
  mutate(rat_dec = rat*0.01)
```

```{=html}
<iframe title="Elections of Russian president, 2024" aria-label="Bar Chart" id="datawrapper-chart-vr6gs" src="https://datawrapper.dwcdn.net/vr6gs/4/" scrolling="no" frameborder="0" style="width: 0; min-width: 100% !important; border: none;" height="790" data-external="1"></iframe><script type="text/javascript">!function(){"use strict";window.addEventListener("message",(function(a){if(void 0!==a.data["datawrapper-height"]){var e=document.querySelectorAll("iframe");for(var t in a.data["datawrapper-height"])for(var r=0;r<e.length;r++)if(e[r].contentWindow===a.source){var i=a.data["datawrapper-height"][t]+"px";e[r].style.height=i}}}))}();
</script>
```
```{}
```

```{r sum_ratio_calc}
# total_sum <- total_voters %>% group_by(year) %>% summarize(sum = sum(total))
# total_gov <- gov_voters %>% group_by(year) %>% summarise(sum_gov = sum(gov_total))
# 
# df_fake <- df_turnout_18_24 %>%
#   filter(ratio > 506) %>%
#   distinct(UIK) %>%
#   left_join(gov_voters) %>%
#   left_join(sum_voters) %>%
#   filter(year==2024) %>% 
#   left_join(total_sum) %>% 
#   left_join(total_gov) %>% 
#   mutate(ratio_total = total/sum,ratio_gov = gov_total/sum_gov) %>% 
#   select(UIK,ratio_total,ratio_gov) %>% 
#   summarise(sum_ratio = sum(ratio_total),sum_ratio_gov = sum(ratio_gov))
```

```{=html}
<iframe title="Countries input in total votes abroad" aria-label="Interactive line chart" id="datawrapper-chart-OywM8" src="https://datawrapper.dwcdn.net/OywM8/4/" scrolling="no" frameborder="0" style="width: 0; min-width: 100% !important; border: none;" height="490" data-external="1"></iframe><script type="text/javascript">!function(){"use strict";window.addEventListener("message",(function(a){if(void 0!==a.data["datawrapper-height"]){var e=document.querySelectorAll("iframe");for(var t in a.data["datawrapper-height"])for(var r=0;r<e.length;r++)if(e[r].contentWindow===a.source){var i=a.data["datawrapper-height"][t]+"px";e[r].style.height=i}}}))}();
</script>
```
@fig-how_voted_gif

```{r}

RU04_24_PM <-
  RU04_24 %>% 
  filter(str_detect(Label,'Пу|Ме|yes')) %>% 
  group_by(en_country,year,region) %>% 
  summarise(rat = mean(ratio), people = sum(number))
```

[![Amount of people per country (X) vs results for Putin (Y)](out/elec_04_24_country.gif){#fig-how_voted_gif fig-align="center" width="600"}](fig-how_voted_gif)

```{r}
voters_total <- function(sel_region = NA, sel_country = NA, ratio=TRUE,plotly_plot = FALSE){
  
  if(is.na(sel_region)){
    sel_region = all_of(RU04_24$region)
    sel_region_label = "all regions"
      if(!is.na(sel_country)){sel_region_label = NULL}
  }  else {
    sel_region
    sel_region_label = sel_region
  }
  
  if(is.na(sel_country)){
    sel_country = all_of(RU04_24$en_country) 
    sel_country_label = NULL
  } else {
    sel_country
    sel_country_label = sel_country
  }  
  
  total_voters <- RU04_24 %>% 
    filter(region %in% c(sel_region)) %>% 
    filter(en_country %in% c(sel_country)) %>%
    filter(Label %in% c("Число недействительных избирательных бюллетеней",
                        "Число действительных избирательных бюллетеней","Ballots.in.box")) %>% 
    group_by(year) %>% 
    summarise(total = sum(number))
  
  
  
  gov_voters <- RU04_24 %>% 
    filter(region %in% c(sel_region)) %>%
    filter(en_country %in% c(sel_country)) %>%
    filter(Label %in% c("yes",
                        "Путин Владимир Владимирович",
                        "Медведев Дмитрий Анатольевич"
    )) %>%
    group_by(year) %>% 
    summarize(gov_total = sum(number))
  
  reject_voters <- RU04_24 %>% 
    filter(region == sel_region) %>%
    filter(en_country %in% c(sel_country)) %>%
    filter(Label %in% c("Rejected.ballots",
                        "Число недействительных избирательных бюллетеней")) %>% 
    group_by(year) %>% 
    summarize(reject_total = sum(number))
  
  against_voters <- RU04_24 %>% 
    filter(region %in% c(sel_region)) %>%
    filter(en_country %in% c(sel_country)) %>%
    filter(Label %in% c("Глазьев Сергей Юрьевич",
                        "Против всех",
                        "Малышкин Олег Александрович",
                        "Миронов Сергей Михайлович",
                        "Хакамада Ирина Муцуовна",
                        "Харитонов Николай Михайлович",
                        "Богданов Андрей Владимирович",
                        "Жириновский Владимир Вольфович",
                        "Зюганов Геннадий Андреевич",
                        "Прохоров Михаил Дмитриевич",
                        "Бабурин Сергей Николаевич",
                        "Грудинин Павел Николаевич",
                        "Собчак Ксения Анатольевна",
                        "Сурайкин Максим Александрович",
                        "Титов Борис Юрьевич",
                        "Явлинский Григорий Алексеевич",
                        "Даванков Владислав Андреевич",
                        "Слуцкий Леонид Эдуардович",
                        "Харитонов Николай Михайлович",
                        "no")) %>% 
    group_by(year) %>% 
    summarize(against_total = sum(number))
  
  
  sum_voters <- total_voters %>% 
    left_join(gov_voters) %>% 
    left_join(reject_voters) %>% 
    left_join(against_voters) %>% 
    mutate(gov_ratio = gov_total/total,
           reject_ratio = reject_total/total,
           against_ratio = against_total/total)
  
  
  
  sum_tmp <-  sum_voters %>% 
    select(year,gov_total,reject_total,against_total) %>% 
    pivot_longer(-year,names_to = "category",values_to = 'ratio') %>% 
    mutate(category = case_when(
      category == "gov_total" ~ "pro P",
      category == "against_total" ~ "against P",
      category == "reject_total" ~ "spoiled ballot",
      TRUE~category
    )) %>% 
    mutate(category = fct_relevel(category,'against P','spoiled ballot','pro P'))
  
pro_p_label <-
  sum_tmp %>% 
  filter(year != 2020) %>% 
  pivot_wider(id_cols = year,names_from = category,values_from = ratio) %>% 
  mutate(pro_p_label = `pro P` - dplyr::lag(`pro P`), 
         pro_p_x = (year - 1.5),
         pro_p_y = `pro P`,
         against_p_label = (`against P`+`spoiled ballot`) - 
                            (dplyr::lag(`spoiled ballot`)+dplyr::lag(`against P`)), 
         against_p_x = (year - 1.5),
         against_p_y = (`against P`+`pro P`+`spoiled ballot`)) %>% 
  mutate(seg_x = if_else(year>2004,year-1,NA),
         seg_xend = if_else(year>2004,year,NA)) %>% 
  rowwise() %>% 
  mutate(total = sum(`pro P`+`spoiled ballot`+`against P`)) %>% 
  mutate(pro_r = round(`pro P`/total,2),
         against_r = round(`against P`/total,2),
         spoiled_r = round(`spoiled ballot`/total,2)) %>% 
  mutate(mid_pro_y = `pro P`/2,
         mid_against_y = (`pro P`+`spoiled ballot` + `against P`)-(`against P`/2),
         mid_spoiled_y = (`pro P`+`spoiled ballot`)-(`spoiled ballot`/2))
  

# static plot with deltas
 g1 <-  sum_tmp %>% 
   filter(year != 2020) %>%
    ggplot()+
   geom_segment(
     data = pro_p_label,
     aes(
       x = seg_x,
       y = `pro P`,
       xend = seg_xend,
       yend = `pro P`
     ),
     color = 'brown',
     linewidth = 0.5
   ) +
   geom_segment(
     data = pro_p_label,
     aes(
       x = seg_x,
       y = against_p_y*0.99,
       xend = seg_xend,
       yend = against_p_y*0.99
     ),
     color = '#0084D7',
     linewidth = 0.5
   ) +
   geom_col(aes(x=year,y=ratio,fill=category), width = 0.8)+
    
    scale_fill_manual(values = c("pro P" = '#8c190f',
                                 "against P" = '#0084D7',
                                 "spoiled ballot" = '#005082'),
                      breaks = c("pro P",
                                 "against P",
                                 "spoiled ballot" ),
                      labels = c("pro P",
                                 "against P",
                                 "spoiled ballot" ))+
    theme_cowplot()+
    theme_minimal_hgrid()+
   # legends
   annotate(
     geom = 'text',
     x = 2020,
     y = pro_p_label$against_p_y[5]*1.26,
     label = "Year-Year difference
including spoiled",
     hjust=0,
     size=3.5,
     color='#0084D7'
   )+
   annotate(
     'curve',
     x = 2020, # Play around with the coordinates until you're satisfied
     y = pro_p_label$against_p_y[5]*1.16,
     yend = pro_p_label$against_p_y[5]*0.99,
     xend = 2021.6,
     linewidth = 0.3,
     color='#0084D7',
     curvature = 0.1,
     arrow = arrow(length = unit(0.1, 'cm'))
   )+
  # pro rus difference  
   geom_label(
     data = pro_p_label,
     aes(x = pro_p_x, y = pro_p_y, label = pro_p_label),
     fill = '#8c190f',
     color = 'white',
     vjust=1,
     size=3.5,
   )+
   # protest difference
   geom_label(
     data = pro_p_label,
     aes(x = against_p_x, y = against_p_y, label = against_p_label),
     fill = '#0084D7',
     color = 'white',
     vjust=1,
     size=3.5
   )+
   # total number
   geom_text(
     data = pro_p_label,
     aes(x = year, y = total, label = total),
     size = 4,
     color = 'grey50',
     vjust=-0.2
   )+
   # ratios
   geom_text(
     data = pro_p_label,
     aes(
       x = year,
       y = mid_pro_y,
       label = paste0(pro_r * 100, "%")
     ),
     angle = 90,
     size = 2.8,
     color = 'grey80'
   ) +
   geom_text(
     data = pro_p_label,
     aes(
       x = year,
       y = mid_against_y,
       label = ifelse(against_r < 0.05, '', paste0(against_r *
                                                     100, "%"))
     ),
     angle = 90,
     size = 2.8,
     color = 'grey80'
   ) +
   geom_text(
     data = pro_p_label,
     aes(
       x = year,
       y = mid_spoiled_y,
       label = ifelse(spoiled_r < 0.05, '', paste0(spoiled_r *
                                                     100, "%"))
     ),
     angle = 90,
     size = 2.8,
     color = 'grey80'
   ) +
   labs(y="people",x="",fill="",
         title=paste0("Russians voted in ",sel_region_label,"  ",sel_country_label))+
    theme(legend.position = 'top',
          axis.line.x = element_blank(),
          axis.ticks.x = element_blank(),
          panel.grid = element_line(color='grey70',linewidth = 0.1))+
          scale_x_continuous(breaks = c(2004,2008,2012,2018,2024))
    
 # g1
 
 g2 <- sum_tmp %>% 
    ggplot()+
    geom_bar(aes(x=year,
                 y=ratio,
                 fill=category), 
                 position = 'fill',
                 stat = 'identity'
                )+
    geom_point(data = pu,
               aes(x=year,y=rat_dec),
               size = 4,
               alpha = 0.9,
               color = 'yellow'
    ) +
    scale_fill_manual(values = c("pro P" = '#8c190f',
                                 "against P" = '#0084D7',
                                 "spoiled ballot" = '#005082'),
                      breaks = c("pro P",
                                 "against P",
                                 "spoiled ballot" ),
                      labels = c("pro P",
                                 "against P",
                                 "spoiled ballot" ))+
    theme_cowplot()+
    theme_minimal_hgrid()+
    scale_y_continuous(labels = scales::percent_format(accuracy = 1))+
    labs(y="%",x="",fill="",title=paste0("Russians voted in ",sel_region_label," ",sel_country_label),
         subtitle="Official results, \"Russian\" official results with yellow dot")+
    theme(legend.position = 'top',
          axis.line.x = element_blank(),
          axis.ticks.x = element_blank())+
    scale_x_continuous(breaks = c(2004,2008,2012,2018,2020,2024))
  
if(ratio){ 
  if(plotly_plot){
  ggplotly(g2) %>%  
    plotly::layout(legend=list(x=0, 
                               xanchor='left',
                               yanchor='top',
                               orientation='h'))
    }else{g2}
  
}else{
  if(plotly_plot){ggplotly(g1) %>%  
    plotly::layout(legend=list(x=0, 
                               xanchor='left',
                               yanchor='top',
                               orientation='h'))
}else{g1}}
}

voters_total(ratio=FALSE)


```

```{r}
voters_total(sel_region = 'Europe',ratio=FALSE)
```

```{=html}
<div class="column-screen" style="margin-left:10%;margin-right:10%; width:80%">
<iframe title="Results of Russian president elections, 2024" aria-label="Map" id="datawrapper-chart-wyiK1" src="https://datawrapper.dwcdn.net/wyiK1/18/" scrolling="no" frameborder="0" style="width: 0; min-width: 100% !important; border: none;" height="564" data-external="1"></iframe><script type="text/javascript">!function(){"use strict";window.addEventListener("message",(function(a){if(void 0!==a.data["datawrapper-height"]){var e=document.querySelectorAll("iframe");for(var t in a.data["datawrapper-height"])for(var r=0;r<e.length;r++)if(e[r].contentWindow===a.source){var i=a.data["datawrapper-height"][t]+"px";e[r].style.height=i}}}))}();
</script>
</div>
```
